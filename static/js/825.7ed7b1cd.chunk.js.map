{"version":3,"file":"static/js/825.7ed7b1cd.chunk.js","mappings":"uKACA,MAA4B,6B,SCCfA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,gBAAKC,UAAWC,EAAhB,SAAsCF,M,mJCChC,SAASG,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MAER,OADAE,QAAQC,IAAIH,IACA,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOI,YAAY,SAAC,KAAD,CAAMC,GAAIL,EAAMI,SAAhB,kBCN5B,S,UCIME,EACM,8BADNA,EAEE,OAGO,SAASC,EAAT,GAA6C,IA6FtCC,EA7FcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,aAEvCC,EAOEF,EAPFE,GACAC,EAMEH,EANFG,cACAC,EAKEJ,EALFI,MACAC,EAIEL,EAJFK,aACAC,EAGEN,EAHFM,WACAC,EAEEP,EAFFO,SACAC,EACER,EADFQ,OAEgBC,EAASZ,EACrBa,EAAO,UADcb,GACd,OAAiBY,GAAjB,OAAwBN,GAErC,OACE,iCACE,iBAAKf,UAAWC,EAAAA,uBAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACIc,GAGA,gBAAKQ,IAAG,UAAKD,GAAWE,IAAKR,KAF7B,gBAAKO,IAAKE,EAAeD,IAAKR,OAKlC,iBAAKhB,UAAWC,EAAAA,iBAAhB,WACE,2BACE,0BAAOe,KACP,gCAAQU,EAAcT,GAAtB,WAEF,0CAiEYN,EAjEkBO,EAkE/BS,KAAKC,MAAMjB,IAlEV,SACA,sCACA,uBAAIQ,KACJ,oCACA,uBAAIU,EAAeT,YAGvB,iBAAKpB,UAAWC,EAAAA,0BAAhB,WACE,oDACA,2BACE,yBACE,SAAC,KAAD,CACEO,GAAE,kBAAaM,EAAb,SACFX,MAAO,CACL2B,KAAMjB,GAHV,qBASF,yBACE,SAAC,KAAD,CACEL,GAAE,kBAAaM,EAAb,YACFX,MAAO,CACL2B,KAAMjB,GAHV,8BAWN,SAAC,KAAD,OA4BN,SAASa,EAAcK,GAErB,OADc,IAAIC,KAAKD,GACVE,cAOf,SAASJ,EAAelB,GACtB,OAAOA,EAAKuB,KAAI,qBAAGC,QAAiBC,KAAK,M,cCjG5B,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAO5B,EAAP,KAAc6B,EAAd,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmCA,OAjCAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbI,YAAW,WACT,KACEC,EAAAA,EAAAA,IAAgBV,GAASW,MAAK,SAAAtC,GAC5B,MAQIA,EAAKA,KAPPG,EADF,EACEA,GACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,WACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,OAWFqB,EATe,CACb3B,GAAAA,EACAC,cAAAA,EACAC,MAAAA,EACAC,aAAAA,EACAC,WAAAA,EACAC,SAAAA,EACAC,OAAAA,OAIJ,MAAOwB,GACPC,EAASD,GAvBX,QAyBED,GAAa,MAEd,OACF,CAACL,KAGF,gCACGM,GAASM,EAAAA,GAAAA,MAAA,wCAA6CN,EAAMO,WAC7D,gCACGT,IAAa,SAACU,EAAA,EAAD,CAAQC,MAAO,UAAWhC,KAAM,KAC7ChB,QAAQC,IAAIM,IACb,SAACV,EAAD,KACA,SAACJ,EAAA,EAAD,UAAYc,IAAS,SAACF,EAAD,CAAWE,MAAOA,c,6HCvDlC0C,EAAO,SACdC,GACF,OAAOC,IAAAA,IAAUD,ICGrB,EAPiB,CACfE,SAAU,+BACVC,QAAS,mCACTC,iBAAkB,SCAZF,EAAsBG,EAAAA,SAAZF,EAAYE,EAAAA,QAEjBC,EAAc,WAAe,IAAdC,EAAa,uDAAN,EACjC,OAAOR,EAAA,UACFG,EADE,uCACqCC,EADrC,iBACqDI,KAIjDC,EAAuB,SAACC,GAA6B,IAAdF,EAAa,uDAAN,EACzD,OAAOR,EAAA,UACFG,EADE,iCAC+BC,EAD/B,iBAC+CI,EAD/C,kBAC6DE,KAIzDhB,EAAkB,SAAAV,GAC7B,OAAOgB,EAAA,UAAYG,EAAZ,kBAA8BnB,EAA9B,oBAAiDoB,M","sources":["webpack://goit-react-hw-05-movies/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/BackButton/BackButton.jsx","components/MovieCard/MovieCard.module.css","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js","services/settings.js","services/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import styles from './Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <div className={styles['container']}>{children}</div>;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\n// import style from './Button.module.css';\n\nexport default function BackButton() {\n  const { state } = useLocation();\n  console.log(state);\n  return state?.prevPage && <Link to={state.prevPage}>Back</Link>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\nimport defaultPoster from './default-poster.jpg';\n\nconst IMG_CONFIG = {\n  base_url: 'https://image.tmdb.org/t/p/',\n  size: 'w500',\n};\n\nexport default function MovieCard({ movie, prevLocation }) {\n  const {\n    id,\n    backdrop_path,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n  } = movie;\n  const { base_url, size } = IMG_CONFIG;\n  const imgPath = `${base_url}${size}${backdrop_path}`;\n\n  return (\n    <>\n      <div className={styles['card__info--general']}>\n        <div className={styles['img__wrapper']}>\n          {!backdrop_path ? (\n            <img src={defaultPoster} alt={title} />\n          ) : (\n            <img src={`${imgPath}`} alt={title} />\n          )}\n        </div>\n        <div className={styles['details__wrapper']}>\n          <h2>\n            <span>{title}</span>\n            <span>({getRelizeYear(release_date)})</span>\n          </h2>\n          <p> User score: {getUserScore(popularity)} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{getGenresNames(genres)}</p>\n        </div>\n      </div>\n      <div className={styles['card__info--additional']}>\n        <h5>Additional information</h5>\n        <ul>\n          <li>\n            <Link\n              to={`/movies/${id}/cast`}\n              state={{\n                from: prevLocation,\n              }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/movies/${id}/reviews`}\n              state={{\n                from: prevLocation,\n              }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n  prevLocation: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nfunction getRelizeYear(date) {\n  const today = new Date(date);\n  return today.getFullYear();\n}\n\nfunction getUserScore(data) {\n  return Math.round(data);\n}\n\nfunction getGenresNames(data) {\n  return data.map(({ name }) => name).join(', ');\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { Container } from 'components/Container/Container';\nimport Loader from 'components/Loader/Loader';\nimport BackButton from 'components/BackButton/BackButton';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nimport { fetchMoviesById } from '../../services/fetchMovies';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      try {\n        fetchMoviesById(movieId).then(data => {\n          const {\n            id,\n            backdrop_path,\n            title,\n            release_date,\n            popularity,\n            overview,\n            genres,\n          } = data.data;\n          const object = {\n            id,\n            backdrop_path,\n            title,\n            release_date,\n            popularity,\n            overview,\n            genres,\n          };\n          setMovie(object);\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }, 1000);\n  }, [movieId]);\n\n  return (\n    <>\n      {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n      <>\n        {isLoading && <Loader color={'#3f51b5'} size={32} />}\n        {console.log(movie)}\n        <BackButton />\n        <Container>{movie && <MovieCard movie={movie} />}</Container>\n      </>\n    </>\n  );\n}\n","import axios from 'axios';\n\nexport const http = {\n  get(url) {\n    return axios.get(url);\n  },\n  post(url, body) {\n    return axios.post(url, body);\n  },\n};\n","const settings = {\n  BASE_URL: 'https://api.themoviedb.org/3',\n  API_KEY: 'c2a3e67f469a4984c82975dd15f4f53a',\n  DEFAULT_LANGUAGE: 'en-US',\n  // PER_PAGE: '&per_page=12',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n  return http.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n  return http.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n  );\n};\n\nexport const fetchMoviesById = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n"],"names":["Container","children","className","styles","BackButton","state","useLocation","console","log","prevPage","to","IMG_CONFIG","MovieCard","data","movie","prevLocation","id","backdrop_path","title","release_date","popularity","overview","genres","size","imgPath","src","alt","defaultPoster","getRelizeYear","Math","round","getGenresNames","from","date","Date","getFullYear","map","name","join","MovieDetailsPage","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useEffect","setTimeout","fetchMoviesById","then","toast","message","Loader","color","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesByRequest","searchRequest"],"sourceRoot":""}