{"version":3,"file":"static/js/680.36967a1a.chunk.js","mappings":"wKA+BA,IA3B4B,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MAUjB,OACE,0BACE,wBAAKF,EAVPA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAM,CAAEP,SAAAA,IAA5C,SACGI,KAFID,MASuB,W,uHC2BtC,UAnCiB,WACf,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,KACEI,EAAAA,EAAAA,KAAcC,MAAK,SAAAC,GACjB,IAAMC,EAAeD,EAAKA,KAAKE,QAAQjB,KAAI,kBAAoB,CAC7DC,GADyC,EAAGA,GAE5CC,MAFyC,EAAOA,UAIlDK,EAAUS,MAEZ,MAAON,GACPC,EAASD,GATX,QAWED,GAAa,MAEd,KAGD,gCACGD,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,KACA,UAAC,IAAD,WACGE,GAASQ,EAAAA,GAAAA,MAAA,wCAA6CR,EAAMS,WAC7D,SAAC,IAAD,CAActB,OAAQA,KACtB,SAAC,KAAD,CAAgBuB,UAAW,c,4ECpCtBC,EAAO,SACdC,GACF,OAAOC,IAAAA,IAAUD,ICGrB,EAPiB,CACfE,SAAU,gCACVC,QAAS,mCACTC,iBAAkB,SCAZF,EAAsBG,EAAAA,SAAZF,EAAYE,EAAAA,QAEjBd,EAAc,WAAe,IAAde,EAAa,uDAAN,EACjC,OAAOP,EAAA,UACFG,EADE,uCACqCC,EADrC,iBACqDG","sources":["components/MovieGallery/MovieGallery.jsx","pages/HomePage/HomePage.jsx","services/api.js","services/settings.js","services/fetchMovies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n// import style from './MovieGallery.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieGallery = ({ movies }) => {\n  const location = useLocation();\n  const renderGallery = () =>\n    movies.map(({ id, title }) => (\n      <li key={id}>\n        <Link to={`/movies/${id}`} state={{ from: { location } }}>\n          {title}\n        </Link>\n      </li>\n    ));\n\n  return (\n    <div>\n      <ul>{movies ? renderGallery() : null}</ul>\n    </div>\n  );\n};\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n\nexport default MovieGallery;\n","import { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Container } from 'components/Container/Container';\nimport MovieGallery from 'components/MovieGallery/MovieGallery';\nimport { fetchMovies } from '../../services/fetchMovies';\nimport Loader from 'components/Loader/Loader';\n// import styles from './HomePage.module.css';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      fetchMovies().then(data => {\n        const mappedMovies = data.data.results.map(({ id, title }) => ({\n          id,\n          title,\n        }));\n        setMovies(mappedMovies);\n      });\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Outlet />\n      <Container>\n        {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n        <MovieGallery movies={movies} />\n        <ToastContainer autoClose={3000} />\n      </Container>\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nexport const http = {\n  get(url) {\n    return axios.get(url);\n  },\n  post(url, body) {\n    return axios.post(url, body);\n  },\n};\n","const settings = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: 'c2a3e67f469a4984c82975dd15f4f53a',\n  DEFAULT_LANGUAGE: 'en-US',\n  // PER_PAGE: '&per_page=12',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n  return http.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n};\n"],"names":["movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","then","data","mappedMovies","results","toast","message","autoClose","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","page"],"sourceRoot":""}