{"version":3,"file":"static/js/895.aa083f36.chunk.js","mappings":"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","sources":["components/Button/Button.module.css","components/Button/Button.jsx","components/MovieCard/MovieCard.module.css","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api.js","services/settings.js","services/fetchMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport style from './Button.module.css';\n\nexport default function Button({ GoBack }) {\n  return (\n    <button type=\"button\" onClick={GoBack} className={style.Button}>\n      Back\n    </button>\n  );\n}\n\nButton.propTypes = {\n  GoBack: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieCard.module.css';\nimport defaultPoster from './default-poster.jpg';\n\nconst IMG_CONFIG = {\n  base_url: 'https://image.tmdb.org/t/p/',\n  size: 'w500',\n};\n\nexport default function MovieCard({ movie, prevLocation }) {\n  const {\n    id,\n    backdrop_path,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n  } = movie;\n  const { base_url, size } = IMG_CONFIG;\n  const imgPath = `${base_url}${size}${backdrop_path}`;\n\n  return (\n    <>\n      <div className={styles['card__info--general']}>\n        <div className={styles['img__wrapper']}>\n          {!backdrop_path ? (\n            <img src={defaultPoster} alt={title} />\n          ) : (\n            <img src={`${imgPath}`} alt={title} />\n          )}\n        </div>\n        <div className={styles['details__wrapper']}>\n          <h2>\n            <span>{title}</span>\n            <span>({getRelizeYear(release_date)})</span>\n          </h2>\n          <p> User score: {getUserScore(popularity)} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{getGenresNames(genres)}</p>\n        </div>\n      </div>\n      <div className={styles['card__info--additional']}>\n        <h5>Additional information</h5>\n        <ul>\n          <li>\n            <Link\n              to={`/movies/${id}/cast`}\n              state={{\n                from: prevLocation,\n              }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link\n              to={`/movies/${id}/reviews`}\n              state={{\n                from: prevLocation,\n              }}\n            >\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    backdrop_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    popularity: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  }).isRequired,\n  prevLocation: PropTypes.shape({\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nfunction getRelizeYear(date) {\n  const today = new Date(date);\n  return today.getFullYear();\n}\n\nfunction getUserScore(data) {\n  return Math.round(data);\n}\n\nfunction getGenresNames(data) {\n  return data.map(({ name }) => name).join(', ');\n}\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport Loader from 'components/Loader/Loader';\nimport Button from 'components/Button/Button';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nimport { fetchMoviesById } from '../../services/fetchMovies';\n\nconst DEFAULT_LOCATION_STATE = {\n  location: {\n    pathname: '/',\n    search: '',\n  },\n};\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const prevLocation = location?.state?.from ?? DEFAULT_LOCATION_STATE;\n\n  useEffect(() => {\n    setIsLoading(true);\n    setTimeout(() => {\n      try {\n        fetchMoviesById(movieId)\n          .then(fetchedMovie)\n          .then(movie => {\n            setMovie(movie);\n          });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }, 1000);\n  }, [movieId]);\n\n  const GoBack = () => {\n    useNavigate(prevLocation.location);\n  };\n\n  return (\n    <>\n      {error && toast.error(`Whoops, something went wrong: ${error.message}`)}\n      <>\n        {isLoading && <Loader color={'#3f51b5'} size={32} />}\n        <Button GoBack={GoBack} />\n        <MovieCard movie={movie} prevLocation={prevLocation} />\n      </>\n    </>\n  );\n}\n\nconst fetchedMovie = data => {\n  console.log(data);\n  const {\n    id,\n    backdrop_path,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n  } = data.data;\n  const movie = {\n    id,\n    backdrop_path,\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n  };\n  console.log(movie);\n  return movie;\n};\n","import axios from 'axios';\n\nexport const http = {\n  get(url) {\n    return axios.get(url);\n  },\n  post(url, body) {\n    return axios.post(url, body);\n  },\n};\n","const settings = {\n  BASE_URL: 'https://api.themoviedb.org/3',\n  API_KEY: 'c2a3e67f469a4984c82975dd15f4f53a',\n  DEFAULT_LANGUAGE: 'en-US',\n  // PER_PAGE: '&per_page=12',\n};\n\nexport default settings;\n","import { http } from './api';\nimport apiSettings from './settings';\n\nconst { BASE_URL, API_KEY } = apiSettings;\n\nexport const fetchMovies = (page = 1) => {\n  return http.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n};\n\nexport const fetchMoviesByRequest = (searchRequest, page = 1) => {\n  return http.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${searchRequest}`\n  );\n};\n\nexport const fetchMoviesById = movieId => {\n  return http.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n};\n"],"names":["Button","GoBack","type","onClick","className","style","IMG_CONFIG","MovieCard","data","movie","prevLocation","id","backdrop_path","title","release_date","popularity","overview","genres","size","imgPath","styles","src","alt","defaultPoster","getRelizeYear","Math","round","getGenresNames","to","state","from","date","Date","getFullYear","map","name","join","DEFAULT_LOCATION_STATE","location","pathname","search","MovieDetailsPage","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","useLocation","useEffect","setTimeout","fetchMoviesById","then","fetchedMovie","toast","message","Loader","color","useNavigate","console","log","http","url","axios","BASE_URL","API_KEY","DEFAULT_LANGUAGE","apiSettings","fetchMovies","page","fetchMoviesByRequest","searchRequest"],"sourceRoot":""}